<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-8">
                 <h1 class="m-0">Lista de ordenes de compras</h1>
            </div>
        </div>
    </div>
</div>
<section class="content mt-2">
     <div class="row">
        <div class="col-sm-12" id="insertErrores">
            {{>errors}}
            {{>success}}
        </div>
    </div>
    <div class="card mt-2">
        <div class="card-header">
            <h4>Productos</h4>
        <div class="row">
            <div class="col-sm-8">
                <label for="">Cliente</label>
                <select name="Cliente" id="Cliente" class="form-control js-exam">
                    <option value="0">--Seleccione un cliente--</option>
                    {{#each clientes}}
                        <option value="{{Cliente}}">{{Cliente}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="col-sm-4 mt-4">
                <button class="btn btn-success mt-2" id="btnBuscarCliente">Buscar</button>
            </div>
            <div class="col-sm-12">
                <label>Días de credito</label>
                <input type="number" id="DiasCredito" class="form-control w-25" placeholder="Días de credito">
            </div>
            <div class="col-sm-3 mt-2">
                <label for="">Cantidad total:</label>
                <p id="CantidadTotal" data-valor=""></p>
            </div>
            <div class="col-sm-3 mt-2">
                <label for="">Precio total:</label>
                <p id="PrecioTotal" data-valor=""></p>
            </div>
        </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped" id="tabla">
                    <thead>
                    <tr>
                        <th class="text-center">Código</th>
                        <th class="text-center">Tipo producto</th>
                        <th class="text-center">Descripción</th>
                        <th class="text-center">Precio FOB unitario</th>
                        <th class="text-center">Precio FOB total</th>
                        <th class="text-center">Cantidad</th>
                        <th class="text-center">Eliminar</th>
                    </tr>
                    <td colspan="7">
                        <input id="buscar" type="text" class="form-control" placeholder="Escriba su busqueda para filtrar" />
                    </td>
                    </thead>
                    <tbody id="tbody">
                        {{#each ordenProveedorTemporal.Productos}}
                            <tr>
                                <td class="text-center"><p >{{Codigo}}</p></td>
                                <td class="text-center"><p >{{TipoProducto}}</p></td>
                                <td class="text-center"><p >{{Descripcion}}</p></td>
                                <td class="text-center"><p >{{PrecioFOBUnitario}}</p></td>
                                <td class="text-center"><p data-precioAnterior={{PrecioFOBTotal}}>{{PrecioFOBTotal}}</p></td>
                                <td class="text-center"><input type="text" value="{{Cantidad}}" data-cantidadAnterior="{{Cantidad}}" class="form-control Cantidad"></td>
                                <td class="text-center"><a href="#" class="btnEliminar" data-Codigo="{{Codigo}}"><i class="far fa-trash-alt text-danger btnEliminar" style="font-size: 22px;" data-Codigo="{{Codigo}}"></i></a></td>
                            </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="text-right mt-2 mb-2">
        <a id="btnEnviar" class="btn btn-success">Generar orden de compra</a>
    </div>
</section>
<script>
    const d = document,
    $tbody = d.getElementById("tbody"),
    $CantidadTotal = d.getElementById("CantidadTotal"),
    $PrecioTotal = d.getElementById("PrecioTotal"),
    $Cliente = d.getElementById("Cliente"),
    $btnBuscarCliente = d.getElementById("btnBuscarCliente"),
    $btnEnviar = d.getElementById("btnEnviar"),
    $DiasCredito = d.getElementById("DiasCredito"),
    $insertErrores = d.getElementById("insertErrores");
    const table = d.getElementById("tabla").tBodies[0];

    buscaTabla = function () {
        texto =  d.getElementById('buscar').value.toLowerCase();
        let r = 0;
        while (row = table.rows[r++]) {
            if (row.innerText.toLowerCase().indexOf(texto) !== -1)
                row.style.display = null;
            else
                row.style.display = 'none';
        }
    }
     d.getElementById('buscar').addEventListener("keydown", e => {
        if(e.keyCode == 13){
            e.preventDefault()
        }
    })
    d.getElementById('buscar').addEventListener('keyup', buscaTabla);

    $Cliente.onchange = () => {
        if($Cliente.value != 0){
            $btnBuscarCliente.removeAttribute("disabled")
        }else{
            $btnBuscarCliente.setAttribute("disabled","")
        }
    }

    const solicitarOrdenCliente = async (data) => {
        return await fetch(`/solicitar-orden-compra-cliente`, {
            body: JSON.stringify(data),
            method: "POST",
            headers: {
            "Content-type": "application/json; charset=utf-8",
            },
        })
        .then((response) => {
            return response.json()
        })
        .then((response) => {
            $CantidadTotal.setAttribute("data-valor", response.CantidadTotal) 
            $PrecioTotal.setAttribute("data-valor", response.PrecioTotal) 
            $PrecioTotal.textContent = new Intl.NumberFormat("en-US", {  style: "currency",  currency: "USD",}).format(response.PrecioTotal)
            $btnEnviar.setAttribute('href',`/generar-orden-compra-cliente/${response._id}`)
            $DiasCredito.value = response.DiasCredito
            $CantidadTotal.textContent = response.CantidadTotal
            let tr = ""
            for(i=0; i< response.Productos.length; i++){
                let linea = `
                    <tr>
                        <td class="text-center"><p>${response.Productos[i].Codigo}</p></td>
                        <td class="text-center"><p>${response.Productos[i].TipoProducto}</p></td>
                        <td class="text-center"><p>${response.Productos[i].Descripcion}</p></td>
                        <td class="text-center"><p>${response.Productos[i].PrecioFOBUnitario}</p></td>
                        <td class="text-center"><p data-precioAnterior=${response.Productos[i].PrecioFOBTotal}>${response.Productos[i].PrecioFOBTotal}</p></td>
                        <td class="text-center"><input type="text" value="${response.Productos[i].Cantidad}" data-cantidadAnterior="${response.Productos[i].Cantidad}" class="form-control Cantidad"></td>
                        <td class="text-center"><a href="#" class="btnEliminar" data-Codigo="${response.Productos[i].Codigo}"><i class="far fa-trash-alt text-danger btnEliminar" style="font-size: 22px;" data-Codigo="${response.Productos[i].Codigo}"></i></a></td>
                    </tr>
                `
                tr +=linea
            }
            $tbody.innerHTML = tr
           
        })
    }

    const eliminarCodigo = async (data) => {
        return await fetch(`/eliminar-codigo-orden-temporal-cliente`, {
            body: JSON.stringify(data),
            method: "POST",
            headers: {
            "Content-type": "application/json; charset=utf-8",
            },
        })
        .then((response) => {
            location.reload()
        })
    }
    const cambiandoCantidadDiasCredito = async (data) => {
        return await fetch(`/cambiando-cantidad-dias-credito`, {
            body: JSON.stringify(data),
            method: "POST",
            headers: {
            "Content-type": "application/json; charset=utf-8",
            },
        })
    }

    const cambiandoCantidad = async (data) => {
        return await fetch(`/cambiando-cantidad-orden-temporal-cliente`, {
            body: JSON.stringify(data),
            method: "POST",
            headers: {
            "Content-type": "application/json; charset=utf-8",
            },
        })
    }
    d.addEventListener("click", e=> {
        if(e.target.classList.contains("btnEliminar")){
            let Codigo = e.target.getAttribute("data-Codigo")
            let data= {
                Codigo: Codigo,
                Cliente: $Cliente.value
            }
            eliminarCodigo(data) 
        }if(e.target == $btnBuscarCliente){
            let data = {
                Cliente: $Cliente.value
            }
            solicitarOrdenCliente(data)
        }
    })

    d.addEventListener("change", e=> {
        if(e.target.classList.contains("Cantidad")){
            if(e.target.value == 0){
                $insertErrores.innerHTML = `
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    La cantidad a agregar no puede ser igual a "0". Si desea eliminar el producto, haga click en el boton con símbolo de papelera.
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`
            }else{
                let linea = e.target.parentElement.parentElement
                let precioFPBTotalLinea =  (+linea.children[3].firstElementChild.textContent * +e.target.value).toFixed(2)
                linea.children[4].firstElementChild.textContent = precioFPBTotalLinea
                let Producto =  [{
                    Codigo: linea.children[0].firstElementChild.textContent,
                    Cantidad: e.target.value,
                    TipoProducto: linea.children[1].firstElementChild.textContent,
                    PrecioFOBUnitario: linea.children[3].firstElementChild.textContent,
                    PrecioFOBTotal: linea.children[4].firstElementChild.textContent,
                    MetrosCubicosUnidad: linea.getAttribute("data-metrosUnidad"),
                    MetrosCubicosTotal: (+linea.getAttribute("data-metrosUnidad") * +e.target.value).toFixed(2),
                    PesoUnidad: linea.getAttribute("data-pesoUnidad"),
                    PesoTotal: (+linea.getAttribute("data-pesoUnidad") * +e.target.value).toFixed(2),
                    Descripcion: linea.children[2].firstElementChild.textContent,
                }]
                let data = {
                    Cliente: $Cliente.value,
                    MetrosCubicos: ((+e.target.value * +linea.getAttribute("data-metrosUnidad")) - (+linea.getAttribute("data-metrosUnidad") * +e.target.getAttribute("data-cantidadAnterior"))),
                    Peso: ((+e.target.value * +linea.getAttribute("data-pesoUnidad")) - (+linea.getAttribute("data-pesoUnidad") * +e.target.getAttribute("data-cantidadAnterior"))),
                    CantidadTotal: +e.target.value - +e.target.getAttribute("data-cantidadAnterior"),
                    PrecioTotal: ((+e.target.value * +linea.children[3].firstElementChild.textContent) - +(+e.target.getAttribute("data-cantidadAnterior") * +linea.children[3].firstElementChild.textContent)),
                    Producto: Producto[0]
                }
                $CantidadTotal.textContent = (+$CantidadTotal.getAttribute("data-valor") + data.CantidadTotal) 
                let precioTotalResultado = (+$PrecioTotal.getAttribute("data-valor") + data.PrecioTotal) 
                $PrecioTotal.textContent = new Intl.NumberFormat("en-US", {  style: "currency",  currency: "USD",}).format(precioTotalResultado) 
                $CantidadTotal.setAttribute("data-valor", $CantidadTotal.textContent)
                $PrecioTotal.setAttribute("data-valor", precioTotalResultado)
                +e.target.setAttribute("data-cantidadAnterior", e.target.value)
                cambiandoCantidad(data)
            }
        }
        if(e.target == $DiasCredito){
            if($DiasCredito.value > 60 || $DiasCredito.value <= 0 ){
                $insertErrores.innerHTML = `
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    Los días de credito deben estar comprendido en un rango de 1 a 60 días. Por favor, valide e intente de nuevo. 
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`
                $DiasCredito.value = 30
            }else{
                if($Cliente.value == 0){
                $insertErrores.innerHTML = `
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    Debe seleccionar un cliente para poder cambiar los días de credito.
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`
                }else{
                    let data = {
                        Dias: $DiasCredito.value,
                        Cliente: $Cliente.value
                    }
                    cambiandoCantidadDiasCredito(data)
                }
            }
        }
    })


</script>